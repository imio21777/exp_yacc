Terminals unused in grammar

    VOID
    LBRACK
    RBRACK


State 126 conflicts: 1 shift/reduce


Grammar

    0 $accept: CompUnit $end

    1 CompUnit: Decl
    2         | CompUnit Decl
    3         | FuncDef
    4         | CompUnit FuncDef
    5         | MainFuncDef
    6         | CompUnit MainFuncDef

    7 Decl: ConstDecl
    8     | VarDecl

    9 ConstDecl: CONST INT IDENT ASSIGN ConstExp SEMICN

   10 VarDecl: INT IDENT SEMICN
   11        | INT IDENT ASSIGN Exp SEMICN

   12 FuncDef: INT IDENT LPARENT RPARENT Block
   13        | INT IDENT LPARENT FuncFParams RPARENT Block

   14 FuncFParams: INT IDENT

   15 MainFuncDef: INT MAIN LPARENT RPARENT Block

   16 Block: LBRACE BlockItems RBRACE
   17      | LBRACE RBRACE

   18 BlockItems: BlockItem
   19           | BlockItems BlockItem

   20 BlockItem: Decl
   21          | Stmt

   22 Stmt: LVal ASSIGN Exp SEMICN
   23     | LVal ASSIGN GETINT LPARENT RPARENT SEMICN
   24     | Exp SEMICN
   25     | SEMICN
   26     | Block
   27     | IF LPARENT Cond RPARENT Stmt
   28     | IF LPARENT Cond RPARENT Stmt ELSE Stmt
   29     | WHILE LPARENT Cond RPARENT Stmt
   30     | BREAK SEMICN
   31     | CONTINUE SEMICN
   32     | RETURN Exp SEMICN
   33     | RETURN SEMICN
   34     | PRINTF LPARENT STR_CONST RPARENT SEMICN
   35     | PRINTF LPARENT STR_CONST COMMA Exp RPARENT SEMICN

   36 Exp: AddExp

   37 Cond: LOrExp

   38 LVal: IDENT

   39 PrimaryExp: LPARENT Exp RPARENT
   40           | LVal
   41           | Number

   42 Number: INT_CONST

   43 UnaryExp: PrimaryExp
   44         | IDENT LPARENT RPARENT
   45         | IDENT LPARENT FuncRParams RPARENT
   46         | PLUS UnaryExp
   47         | MINU UnaryExp
   48         | NOT UnaryExp

   49 FuncRParams: Exp
   50            | FuncRParams COMMA Exp

   51 MulExp: UnaryExp
   52       | MulExp MULT UnaryExp
   53       | MulExp DIV UnaryExp
   54       | MulExp MOD UnaryExp

   55 AddExp: MulExp
   56       | AddExp PLUS MulExp
   57       | AddExp MINU MulExp

   58 RelExp: AddExp
   59       | RelExp LSS AddExp
   60       | RelExp GRE AddExp
   61       | RelExp LEQ AddExp
   62       | RelExp GEQ AddExp

   63 EqExp: RelExp
   64      | EqExp EQL RelExp
   65      | EqExp NEQ RelExp

   66 LAndExp: EqExp
   67        | LAndExp AND EqExp

   68 LOrExp: LAndExp
   69       | LOrExp OR LAndExp

   70 ConstExp: AddExp


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CONST (258) 9
    INT (259) 9 10 11 12 13 14 15
    RETURN (260) 32 33
    PRINTF (261) 34 35
    GETINT (262) 23
    MAIN (263) 15
    BREAK (264) 30
    CONTINUE (265) 31
    IF (266) 27 28
    ELSE (267) 28
    WHILE (268) 29
    VOID (269)
    ASSIGN (270) 9 11 22 23
    LBRACE (271) 16 17
    RBRACE (272) 16 17
    LPARENT (273) 12 13 15 23 27 28 29 34 35 39 44 45
    RPARENT (274) 12 13 15 23 27 28 29 34 35 39 44 45
    SEMICN (275) 9 10 11 22 23 24 25 30 31 32 33 34 35
    COMMA (276) 35 50
    LBRACK (277)
    RBRACK (278)
    NOT (279) 48
    AND (280) 67
    OR (281) 69
    PLUS (282) 46 56
    MINU (283) 47 57
    MULT (284) 52
    DIV (285) 53
    MOD (286) 54
    LSS (287) 59
    LEQ (288) 61
    GRE (289) 60
    GEQ (290) 62
    EQL (291) 64
    NEQ (292) 65
    INT_CONST <int_val> (293) 42
    IDENT <str_val> (294) 9 10 11 12 13 14 38 44 45
    STR_CONST <str_val> (295) 34 35
    UNARY (296)


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    CompUnit <ast_val> (43)
        on left: 1 2 3 4 5 6
        on right: 0 2 4 6
    Decl <decl_val> (44)
        on left: 7 8
        on right: 1 2 20
    ConstDecl <decl_val> (45)
        on left: 9
        on right: 7
    VarDecl <decl_val> (46)
        on left: 10 11
        on right: 8
    FuncDef <ast_val> (47)
        on left: 12 13
        on right: 3 4
    FuncFParams (48)
        on left: 14
        on right: 13
    MainFuncDef <ast_val> (49)
        on left: 15
        on right: 5 6
    Block <block_val> (50)
        on left: 16 17
        on right: 12 13 15 26
    BlockItems <block_val> (51)
        on left: 18 19
        on right: 16 19
    BlockItem <block_val> (52)
        on left: 20 21
        on right: 18 19
    Stmt <stmt_val> (53)
        on left: 22 23 24 25 26 27 28 29 30 31 32 33 34 35
        on right: 21 27 28 29
    Exp <exp_val> (54)
        on left: 36
        on right: 11 22 24 32 35 39 49 50
    Cond <exp_val> (55)
        on left: 37
        on right: 27 28 29
    LVal <exp_val> (56)
        on left: 38
        on right: 22 23 40
    PrimaryExp <exp_val> (57)
        on left: 39 40 41
        on right: 43
    Number <exp_val> (58)
        on left: 42
        on right: 41
    UnaryExp <exp_val> (59)
        on left: 43 44 45 46 47 48
        on right: 46 47 48 51 52 53 54
    FuncRParams <exp_val> (60)
        on left: 49 50
        on right: 45 50
    MulExp <exp_val> (61)
        on left: 51 52 53 54
        on right: 52 53 54 55 56 57
    AddExp <exp_val> (62)
        on left: 55 56 57
        on right: 36 56 57 58 59 60 61 62 70
    RelExp <exp_val> (63)
        on left: 58 59 60 61 62
        on right: 59 60 61 62 63 64 65
    EqExp <exp_val> (64)
        on left: 63 64 65
        on right: 64 65 66 67
    LAndExp <exp_val> (65)
        on left: 66 67
        on right: 67 68 69
    LOrExp <exp_val> (66)
        on left: 68 69
        on right: 37 69
    ConstExp <exp_val> (67)
        on left: 70
        on right: 9


State 0

    0 $accept: • CompUnit $end

    CONST  shift, and go to state 1
    INT    shift, and go to state 2

    CompUnit     go to state 3
    Decl         go to state 4
    ConstDecl    go to state 5
    VarDecl      go to state 6
    FuncDef      go to state 7
    MainFuncDef  go to state 8


State 1

    9 ConstDecl: CONST • INT IDENT ASSIGN ConstExp SEMICN

    INT  shift, and go to state 9


State 2

   10 VarDecl: INT • IDENT SEMICN
   11        | INT • IDENT ASSIGN Exp SEMICN
   12 FuncDef: INT • IDENT LPARENT RPARENT Block
   13        | INT • IDENT LPARENT FuncFParams RPARENT Block
   15 MainFuncDef: INT • MAIN LPARENT RPARENT Block

    MAIN   shift, and go to state 10
    IDENT  shift, and go to state 11


State 3

    0 $accept: CompUnit • $end
    2 CompUnit: CompUnit • Decl
    4         | CompUnit • FuncDef
    6         | CompUnit • MainFuncDef

    $end   shift, and go to state 12
    CONST  shift, and go to state 1
    INT    shift, and go to state 2

    Decl         go to state 13
    ConstDecl    go to state 5
    VarDecl      go to state 6
    FuncDef      go to state 14
    MainFuncDef  go to state 15


State 4

    1 CompUnit: Decl •

    $default  reduce using rule 1 (CompUnit)


State 5

    7 Decl: ConstDecl •

    $default  reduce using rule 7 (Decl)


State 6

    8 Decl: VarDecl •

    $default  reduce using rule 8 (Decl)


State 7

    3 CompUnit: FuncDef •

    $default  reduce using rule 3 (CompUnit)


State 8

    5 CompUnit: MainFuncDef •

    $default  reduce using rule 5 (CompUnit)


State 9

    9 ConstDecl: CONST INT • IDENT ASSIGN ConstExp SEMICN

    IDENT  shift, and go to state 16


State 10

   15 MainFuncDef: INT MAIN • LPARENT RPARENT Block

    LPARENT  shift, and go to state 17


State 11

   10 VarDecl: INT IDENT • SEMICN
   11        | INT IDENT • ASSIGN Exp SEMICN
   12 FuncDef: INT IDENT • LPARENT RPARENT Block
   13        | INT IDENT • LPARENT FuncFParams RPARENT Block

    ASSIGN   shift, and go to state 18
    LPARENT  shift, and go to state 19
    SEMICN   shift, and go to state 20


State 12

    0 $accept: CompUnit $end •

    $default  accept


State 13

    2 CompUnit: CompUnit Decl •

    $default  reduce using rule 2 (CompUnit)


State 14

    4 CompUnit: CompUnit FuncDef •

    $default  reduce using rule 4 (CompUnit)


State 15

    6 CompUnit: CompUnit MainFuncDef •

    $default  reduce using rule 6 (CompUnit)


State 16

    9 ConstDecl: CONST INT IDENT • ASSIGN ConstExp SEMICN

    ASSIGN  shift, and go to state 21


State 17

   15 MainFuncDef: INT MAIN LPARENT • RPARENT Block

    RPARENT  shift, and go to state 22


State 18

   11 VarDecl: INT IDENT ASSIGN • Exp SEMICN

    LPARENT    shift, and go to state 23
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    Exp         go to state 29
    LVal        go to state 30
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 33
    MulExp      go to state 34
    AddExp      go to state 35


State 19

   12 FuncDef: INT IDENT LPARENT • RPARENT Block
   13        | INT IDENT LPARENT • FuncFParams RPARENT Block

    INT      shift, and go to state 36
    RPARENT  shift, and go to state 37

    FuncFParams  go to state 38


State 20

   10 VarDecl: INT IDENT SEMICN •

    $default  reduce using rule 10 (VarDecl)


State 21

    9 ConstDecl: CONST INT IDENT ASSIGN • ConstExp SEMICN

    LPARENT    shift, and go to state 23
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    LVal        go to state 30
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 33
    MulExp      go to state 34
    AddExp      go to state 39
    ConstExp    go to state 40


State 22

   15 MainFuncDef: INT MAIN LPARENT RPARENT • Block

    LBRACE  shift, and go to state 41

    Block  go to state 42


State 23

   39 PrimaryExp: LPARENT • Exp RPARENT

    LPARENT    shift, and go to state 23
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    Exp         go to state 43
    LVal        go to state 30
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 33
    MulExp      go to state 34
    AddExp      go to state 35


State 24

   48 UnaryExp: NOT • UnaryExp

    LPARENT    shift, and go to state 23
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    LVal        go to state 30
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 44


State 25

   46 UnaryExp: PLUS • UnaryExp

    LPARENT    shift, and go to state 23
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    LVal        go to state 30
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 45


State 26

   47 UnaryExp: MINU • UnaryExp

    LPARENT    shift, and go to state 23
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    LVal        go to state 30
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 46


State 27

   42 Number: INT_CONST •

    $default  reduce using rule 42 (Number)


State 28

   38 LVal: IDENT •
   44 UnaryExp: IDENT • LPARENT RPARENT
   45         | IDENT • LPARENT FuncRParams RPARENT

    LPARENT  shift, and go to state 47

    $default  reduce using rule 38 (LVal)


State 29

   11 VarDecl: INT IDENT ASSIGN Exp • SEMICN

    SEMICN  shift, and go to state 48


State 30

   40 PrimaryExp: LVal •

    $default  reduce using rule 40 (PrimaryExp)


State 31

   43 UnaryExp: PrimaryExp •

    $default  reduce using rule 43 (UnaryExp)


State 32

   41 PrimaryExp: Number •

    $default  reduce using rule 41 (PrimaryExp)


State 33

   51 MulExp: UnaryExp •

    $default  reduce using rule 51 (MulExp)


State 34

   52 MulExp: MulExp • MULT UnaryExp
   53       | MulExp • DIV UnaryExp
   54       | MulExp • MOD UnaryExp
   55 AddExp: MulExp •

    MULT  shift, and go to state 49
    DIV   shift, and go to state 50
    MOD   shift, and go to state 51

    $default  reduce using rule 55 (AddExp)


State 35

   36 Exp: AddExp •
   56 AddExp: AddExp • PLUS MulExp
   57       | AddExp • MINU MulExp

    PLUS  shift, and go to state 52
    MINU  shift, and go to state 53

    $default  reduce using rule 36 (Exp)


State 36

   14 FuncFParams: INT • IDENT

    IDENT  shift, and go to state 54


State 37

   12 FuncDef: INT IDENT LPARENT RPARENT • Block

    LBRACE  shift, and go to state 41

    Block  go to state 55


State 38

   13 FuncDef: INT IDENT LPARENT FuncFParams • RPARENT Block

    RPARENT  shift, and go to state 56


State 39

   56 AddExp: AddExp • PLUS MulExp
   57       | AddExp • MINU MulExp
   70 ConstExp: AddExp •

    PLUS  shift, and go to state 52
    MINU  shift, and go to state 53

    $default  reduce using rule 70 (ConstExp)


State 40

    9 ConstDecl: CONST INT IDENT ASSIGN ConstExp • SEMICN

    SEMICN  shift, and go to state 57


State 41

   16 Block: LBRACE • BlockItems RBRACE
   17      | LBRACE • RBRACE

    CONST      shift, and go to state 1
    INT        shift, and go to state 58
    RETURN     shift, and go to state 59
    PRINTF     shift, and go to state 60
    BREAK      shift, and go to state 61
    CONTINUE   shift, and go to state 62
    IF         shift, and go to state 63
    WHILE      shift, and go to state 64
    LBRACE     shift, and go to state 41
    RBRACE     shift, and go to state 65
    LPARENT    shift, and go to state 23
    SEMICN     shift, and go to state 66
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    Decl        go to state 67
    ConstDecl   go to state 5
    VarDecl     go to state 6
    Block       go to state 68
    BlockItems  go to state 69
    BlockItem   go to state 70
    Stmt        go to state 71
    Exp         go to state 72
    LVal        go to state 73
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 33
    MulExp      go to state 34
    AddExp      go to state 35


State 42

   15 MainFuncDef: INT MAIN LPARENT RPARENT Block •

    $default  reduce using rule 15 (MainFuncDef)


State 43

   39 PrimaryExp: LPARENT Exp • RPARENT

    RPARENT  shift, and go to state 74


State 44

   48 UnaryExp: NOT UnaryExp •

    $default  reduce using rule 48 (UnaryExp)


State 45

   46 UnaryExp: PLUS UnaryExp •

    $default  reduce using rule 46 (UnaryExp)


State 46

   47 UnaryExp: MINU UnaryExp •

    $default  reduce using rule 47 (UnaryExp)


State 47

   44 UnaryExp: IDENT LPARENT • RPARENT
   45         | IDENT LPARENT • FuncRParams RPARENT

    LPARENT    shift, and go to state 23
    RPARENT    shift, and go to state 75
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    Exp          go to state 76
    LVal         go to state 30
    PrimaryExp   go to state 31
    Number       go to state 32
    UnaryExp     go to state 33
    FuncRParams  go to state 77
    MulExp       go to state 34
    AddExp       go to state 35


State 48

   11 VarDecl: INT IDENT ASSIGN Exp SEMICN •

    $default  reduce using rule 11 (VarDecl)


State 49

   52 MulExp: MulExp MULT • UnaryExp

    LPARENT    shift, and go to state 23
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    LVal        go to state 30
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 78


State 50

   53 MulExp: MulExp DIV • UnaryExp

    LPARENT    shift, and go to state 23
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    LVal        go to state 30
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 79


State 51

   54 MulExp: MulExp MOD • UnaryExp

    LPARENT    shift, and go to state 23
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    LVal        go to state 30
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 80


State 52

   56 AddExp: AddExp PLUS • MulExp

    LPARENT    shift, and go to state 23
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    LVal        go to state 30
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 33
    MulExp      go to state 81


State 53

   57 AddExp: AddExp MINU • MulExp

    LPARENT    shift, and go to state 23
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    LVal        go to state 30
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 33
    MulExp      go to state 82


State 54

   14 FuncFParams: INT IDENT •

    $default  reduce using rule 14 (FuncFParams)


State 55

   12 FuncDef: INT IDENT LPARENT RPARENT Block •

    $default  reduce using rule 12 (FuncDef)


State 56

   13 FuncDef: INT IDENT LPARENT FuncFParams RPARENT • Block

    LBRACE  shift, and go to state 41

    Block  go to state 83


State 57

    9 ConstDecl: CONST INT IDENT ASSIGN ConstExp SEMICN •

    $default  reduce using rule 9 (ConstDecl)


State 58

   10 VarDecl: INT • IDENT SEMICN
   11        | INT • IDENT ASSIGN Exp SEMICN

    IDENT  shift, and go to state 84


State 59

   32 Stmt: RETURN • Exp SEMICN
   33     | RETURN • SEMICN

    LPARENT    shift, and go to state 23
    SEMICN     shift, and go to state 85
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    Exp         go to state 86
    LVal        go to state 30
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 33
    MulExp      go to state 34
    AddExp      go to state 35


State 60

   34 Stmt: PRINTF • LPARENT STR_CONST RPARENT SEMICN
   35     | PRINTF • LPARENT STR_CONST COMMA Exp RPARENT SEMICN

    LPARENT  shift, and go to state 87


State 61

   30 Stmt: BREAK • SEMICN

    SEMICN  shift, and go to state 88


State 62

   31 Stmt: CONTINUE • SEMICN

    SEMICN  shift, and go to state 89


State 63

   27 Stmt: IF • LPARENT Cond RPARENT Stmt
   28     | IF • LPARENT Cond RPARENT Stmt ELSE Stmt

    LPARENT  shift, and go to state 90


State 64

   29 Stmt: WHILE • LPARENT Cond RPARENT Stmt

    LPARENT  shift, and go to state 91


State 65

   17 Block: LBRACE RBRACE •

    $default  reduce using rule 17 (Block)


State 66

   25 Stmt: SEMICN •

    $default  reduce using rule 25 (Stmt)


State 67

   20 BlockItem: Decl •

    $default  reduce using rule 20 (BlockItem)


State 68

   26 Stmt: Block •

    $default  reduce using rule 26 (Stmt)


State 69

   16 Block: LBRACE BlockItems • RBRACE
   19 BlockItems: BlockItems • BlockItem

    CONST      shift, and go to state 1
    INT        shift, and go to state 58
    RETURN     shift, and go to state 59
    PRINTF     shift, and go to state 60
    BREAK      shift, and go to state 61
    CONTINUE   shift, and go to state 62
    IF         shift, and go to state 63
    WHILE      shift, and go to state 64
    LBRACE     shift, and go to state 41
    RBRACE     shift, and go to state 92
    LPARENT    shift, and go to state 23
    SEMICN     shift, and go to state 66
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    Decl        go to state 67
    ConstDecl   go to state 5
    VarDecl     go to state 6
    Block       go to state 68
    BlockItem   go to state 93
    Stmt        go to state 71
    Exp         go to state 72
    LVal        go to state 73
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 33
    MulExp      go to state 34
    AddExp      go to state 35


State 70

   18 BlockItems: BlockItem •

    $default  reduce using rule 18 (BlockItems)


State 71

   21 BlockItem: Stmt •

    $default  reduce using rule 21 (BlockItem)


State 72

   24 Stmt: Exp • SEMICN

    SEMICN  shift, and go to state 94


State 73

   22 Stmt: LVal • ASSIGN Exp SEMICN
   23     | LVal • ASSIGN GETINT LPARENT RPARENT SEMICN
   40 PrimaryExp: LVal •

    ASSIGN  shift, and go to state 95

    $default  reduce using rule 40 (PrimaryExp)


State 74

   39 PrimaryExp: LPARENT Exp RPARENT •

    $default  reduce using rule 39 (PrimaryExp)


State 75

   44 UnaryExp: IDENT LPARENT RPARENT •

    $default  reduce using rule 44 (UnaryExp)


State 76

   49 FuncRParams: Exp •

    $default  reduce using rule 49 (FuncRParams)


State 77

   45 UnaryExp: IDENT LPARENT FuncRParams • RPARENT
   50 FuncRParams: FuncRParams • COMMA Exp

    RPARENT  shift, and go to state 96
    COMMA    shift, and go to state 97


State 78

   52 MulExp: MulExp MULT UnaryExp •

    $default  reduce using rule 52 (MulExp)


State 79

   53 MulExp: MulExp DIV UnaryExp •

    $default  reduce using rule 53 (MulExp)


State 80

   54 MulExp: MulExp MOD UnaryExp •

    $default  reduce using rule 54 (MulExp)


State 81

   52 MulExp: MulExp • MULT UnaryExp
   53       | MulExp • DIV UnaryExp
   54       | MulExp • MOD UnaryExp
   56 AddExp: AddExp PLUS MulExp •

    MULT  shift, and go to state 49
    DIV   shift, and go to state 50
    MOD   shift, and go to state 51

    $default  reduce using rule 56 (AddExp)


State 82

   52 MulExp: MulExp • MULT UnaryExp
   53       | MulExp • DIV UnaryExp
   54       | MulExp • MOD UnaryExp
   57 AddExp: AddExp MINU MulExp •

    MULT  shift, and go to state 49
    DIV   shift, and go to state 50
    MOD   shift, and go to state 51

    $default  reduce using rule 57 (AddExp)


State 83

   13 FuncDef: INT IDENT LPARENT FuncFParams RPARENT Block •

    $default  reduce using rule 13 (FuncDef)


State 84

   10 VarDecl: INT IDENT • SEMICN
   11        | INT IDENT • ASSIGN Exp SEMICN

    ASSIGN  shift, and go to state 18
    SEMICN  shift, and go to state 20


State 85

   33 Stmt: RETURN SEMICN •

    $default  reduce using rule 33 (Stmt)


State 86

   32 Stmt: RETURN Exp • SEMICN

    SEMICN  shift, and go to state 98


State 87

   34 Stmt: PRINTF LPARENT • STR_CONST RPARENT SEMICN
   35     | PRINTF LPARENT • STR_CONST COMMA Exp RPARENT SEMICN

    STR_CONST  shift, and go to state 99


State 88

   30 Stmt: BREAK SEMICN •

    $default  reduce using rule 30 (Stmt)


State 89

   31 Stmt: CONTINUE SEMICN •

    $default  reduce using rule 31 (Stmt)


State 90

   27 Stmt: IF LPARENT • Cond RPARENT Stmt
   28     | IF LPARENT • Cond RPARENT Stmt ELSE Stmt

    LPARENT    shift, and go to state 23
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    Cond        go to state 100
    LVal        go to state 30
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 33
    MulExp      go to state 34
    AddExp      go to state 101
    RelExp      go to state 102
    EqExp       go to state 103
    LAndExp     go to state 104
    LOrExp      go to state 105


State 91

   29 Stmt: WHILE LPARENT • Cond RPARENT Stmt

    LPARENT    shift, and go to state 23
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    Cond        go to state 106
    LVal        go to state 30
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 33
    MulExp      go to state 34
    AddExp      go to state 101
    RelExp      go to state 102
    EqExp       go to state 103
    LAndExp     go to state 104
    LOrExp      go to state 105


State 92

   16 Block: LBRACE BlockItems RBRACE •

    $default  reduce using rule 16 (Block)


State 93

   19 BlockItems: BlockItems BlockItem •

    $default  reduce using rule 19 (BlockItems)


State 94

   24 Stmt: Exp SEMICN •

    $default  reduce using rule 24 (Stmt)


State 95

   22 Stmt: LVal ASSIGN • Exp SEMICN
   23     | LVal ASSIGN • GETINT LPARENT RPARENT SEMICN

    GETINT     shift, and go to state 107
    LPARENT    shift, and go to state 23
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    Exp         go to state 108
    LVal        go to state 30
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 33
    MulExp      go to state 34
    AddExp      go to state 35


State 96

   45 UnaryExp: IDENT LPARENT FuncRParams RPARENT •

    $default  reduce using rule 45 (UnaryExp)


State 97

   50 FuncRParams: FuncRParams COMMA • Exp

    LPARENT    shift, and go to state 23
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    Exp         go to state 109
    LVal        go to state 30
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 33
    MulExp      go to state 34
    AddExp      go to state 35


State 98

   32 Stmt: RETURN Exp SEMICN •

    $default  reduce using rule 32 (Stmt)


State 99

   34 Stmt: PRINTF LPARENT STR_CONST • RPARENT SEMICN
   35     | PRINTF LPARENT STR_CONST • COMMA Exp RPARENT SEMICN

    RPARENT  shift, and go to state 110
    COMMA    shift, and go to state 111


State 100

   27 Stmt: IF LPARENT Cond • RPARENT Stmt
   28     | IF LPARENT Cond • RPARENT Stmt ELSE Stmt

    RPARENT  shift, and go to state 112


State 101

   56 AddExp: AddExp • PLUS MulExp
   57       | AddExp • MINU MulExp
   58 RelExp: AddExp •

    PLUS  shift, and go to state 52
    MINU  shift, and go to state 53

    $default  reduce using rule 58 (RelExp)


State 102

   59 RelExp: RelExp • LSS AddExp
   60       | RelExp • GRE AddExp
   61       | RelExp • LEQ AddExp
   62       | RelExp • GEQ AddExp
   63 EqExp: RelExp •

    LSS  shift, and go to state 113
    LEQ  shift, and go to state 114
    GRE  shift, and go to state 115
    GEQ  shift, and go to state 116

    $default  reduce using rule 63 (EqExp)


State 103

   64 EqExp: EqExp • EQL RelExp
   65      | EqExp • NEQ RelExp
   66 LAndExp: EqExp •

    EQL  shift, and go to state 117
    NEQ  shift, and go to state 118

    $default  reduce using rule 66 (LAndExp)


State 104

   67 LAndExp: LAndExp • AND EqExp
   68 LOrExp: LAndExp •

    AND  shift, and go to state 119

    $default  reduce using rule 68 (LOrExp)


State 105

   37 Cond: LOrExp •
   69 LOrExp: LOrExp • OR LAndExp

    OR  shift, and go to state 120

    $default  reduce using rule 37 (Cond)


State 106

   29 Stmt: WHILE LPARENT Cond • RPARENT Stmt

    RPARENT  shift, and go to state 121


State 107

   23 Stmt: LVal ASSIGN GETINT • LPARENT RPARENT SEMICN

    LPARENT  shift, and go to state 122


State 108

   22 Stmt: LVal ASSIGN Exp • SEMICN

    SEMICN  shift, and go to state 123


State 109

   50 FuncRParams: FuncRParams COMMA Exp •

    $default  reduce using rule 50 (FuncRParams)


State 110

   34 Stmt: PRINTF LPARENT STR_CONST RPARENT • SEMICN

    SEMICN  shift, and go to state 124


State 111

   35 Stmt: PRINTF LPARENT STR_CONST COMMA • Exp RPARENT SEMICN

    LPARENT    shift, and go to state 23
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    Exp         go to state 125
    LVal        go to state 30
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 33
    MulExp      go to state 34
    AddExp      go to state 35


State 112

   27 Stmt: IF LPARENT Cond RPARENT • Stmt
   28     | IF LPARENT Cond RPARENT • Stmt ELSE Stmt

    RETURN     shift, and go to state 59
    PRINTF     shift, and go to state 60
    BREAK      shift, and go to state 61
    CONTINUE   shift, and go to state 62
    IF         shift, and go to state 63
    WHILE      shift, and go to state 64
    LBRACE     shift, and go to state 41
    LPARENT    shift, and go to state 23
    SEMICN     shift, and go to state 66
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    Block       go to state 68
    Stmt        go to state 126
    Exp         go to state 72
    LVal        go to state 73
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 33
    MulExp      go to state 34
    AddExp      go to state 35


State 113

   59 RelExp: RelExp LSS • AddExp

    LPARENT    shift, and go to state 23
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    LVal        go to state 30
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 33
    MulExp      go to state 34
    AddExp      go to state 127


State 114

   61 RelExp: RelExp LEQ • AddExp

    LPARENT    shift, and go to state 23
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    LVal        go to state 30
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 33
    MulExp      go to state 34
    AddExp      go to state 128


State 115

   60 RelExp: RelExp GRE • AddExp

    LPARENT    shift, and go to state 23
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    LVal        go to state 30
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 33
    MulExp      go to state 34
    AddExp      go to state 129


State 116

   62 RelExp: RelExp GEQ • AddExp

    LPARENT    shift, and go to state 23
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    LVal        go to state 30
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 33
    MulExp      go to state 34
    AddExp      go to state 130


State 117

   64 EqExp: EqExp EQL • RelExp

    LPARENT    shift, and go to state 23
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    LVal        go to state 30
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 33
    MulExp      go to state 34
    AddExp      go to state 101
    RelExp      go to state 131


State 118

   65 EqExp: EqExp NEQ • RelExp

    LPARENT    shift, and go to state 23
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    LVal        go to state 30
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 33
    MulExp      go to state 34
    AddExp      go to state 101
    RelExp      go to state 132


State 119

   67 LAndExp: LAndExp AND • EqExp

    LPARENT    shift, and go to state 23
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    LVal        go to state 30
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 33
    MulExp      go to state 34
    AddExp      go to state 101
    RelExp      go to state 102
    EqExp       go to state 133


State 120

   69 LOrExp: LOrExp OR • LAndExp

    LPARENT    shift, and go to state 23
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    LVal        go to state 30
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 33
    MulExp      go to state 34
    AddExp      go to state 101
    RelExp      go to state 102
    EqExp       go to state 103
    LAndExp     go to state 134


State 121

   29 Stmt: WHILE LPARENT Cond RPARENT • Stmt

    RETURN     shift, and go to state 59
    PRINTF     shift, and go to state 60
    BREAK      shift, and go to state 61
    CONTINUE   shift, and go to state 62
    IF         shift, and go to state 63
    WHILE      shift, and go to state 64
    LBRACE     shift, and go to state 41
    LPARENT    shift, and go to state 23
    SEMICN     shift, and go to state 66
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    Block       go to state 68
    Stmt        go to state 135
    Exp         go to state 72
    LVal        go to state 73
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 33
    MulExp      go to state 34
    AddExp      go to state 35


State 122

   23 Stmt: LVal ASSIGN GETINT LPARENT • RPARENT SEMICN

    RPARENT  shift, and go to state 136


State 123

   22 Stmt: LVal ASSIGN Exp SEMICN •

    $default  reduce using rule 22 (Stmt)


State 124

   34 Stmt: PRINTF LPARENT STR_CONST RPARENT SEMICN •

    $default  reduce using rule 34 (Stmt)


State 125

   35 Stmt: PRINTF LPARENT STR_CONST COMMA Exp • RPARENT SEMICN

    RPARENT  shift, and go to state 137


State 126

   27 Stmt: IF LPARENT Cond RPARENT Stmt •
   28     | IF LPARENT Cond RPARENT Stmt • ELSE Stmt

    ELSE  shift, and go to state 138

    ELSE      [reduce using rule 27 (Stmt)]
    $default  reduce using rule 27 (Stmt)


State 127

   56 AddExp: AddExp • PLUS MulExp
   57       | AddExp • MINU MulExp
   59 RelExp: RelExp LSS AddExp •

    PLUS  shift, and go to state 52
    MINU  shift, and go to state 53

    $default  reduce using rule 59 (RelExp)


State 128

   56 AddExp: AddExp • PLUS MulExp
   57       | AddExp • MINU MulExp
   61 RelExp: RelExp LEQ AddExp •

    PLUS  shift, and go to state 52
    MINU  shift, and go to state 53

    $default  reduce using rule 61 (RelExp)


State 129

   56 AddExp: AddExp • PLUS MulExp
   57       | AddExp • MINU MulExp
   60 RelExp: RelExp GRE AddExp •

    PLUS  shift, and go to state 52
    MINU  shift, and go to state 53

    $default  reduce using rule 60 (RelExp)


State 130

   56 AddExp: AddExp • PLUS MulExp
   57       | AddExp • MINU MulExp
   62 RelExp: RelExp GEQ AddExp •

    PLUS  shift, and go to state 52
    MINU  shift, and go to state 53

    $default  reduce using rule 62 (RelExp)


State 131

   59 RelExp: RelExp • LSS AddExp
   60       | RelExp • GRE AddExp
   61       | RelExp • LEQ AddExp
   62       | RelExp • GEQ AddExp
   64 EqExp: EqExp EQL RelExp •

    LSS  shift, and go to state 113
    LEQ  shift, and go to state 114
    GRE  shift, and go to state 115
    GEQ  shift, and go to state 116

    $default  reduce using rule 64 (EqExp)


State 132

   59 RelExp: RelExp • LSS AddExp
   60       | RelExp • GRE AddExp
   61       | RelExp • LEQ AddExp
   62       | RelExp • GEQ AddExp
   65 EqExp: EqExp NEQ RelExp •

    LSS  shift, and go to state 113
    LEQ  shift, and go to state 114
    GRE  shift, and go to state 115
    GEQ  shift, and go to state 116

    $default  reduce using rule 65 (EqExp)


State 133

   64 EqExp: EqExp • EQL RelExp
   65      | EqExp • NEQ RelExp
   67 LAndExp: LAndExp AND EqExp •

    EQL  shift, and go to state 117
    NEQ  shift, and go to state 118

    $default  reduce using rule 67 (LAndExp)


State 134

   67 LAndExp: LAndExp • AND EqExp
   69 LOrExp: LOrExp OR LAndExp •

    AND  shift, and go to state 119

    $default  reduce using rule 69 (LOrExp)


State 135

   29 Stmt: WHILE LPARENT Cond RPARENT Stmt •

    $default  reduce using rule 29 (Stmt)


State 136

   23 Stmt: LVal ASSIGN GETINT LPARENT RPARENT • SEMICN

    SEMICN  shift, and go to state 139


State 137

   35 Stmt: PRINTF LPARENT STR_CONST COMMA Exp RPARENT • SEMICN

    SEMICN  shift, and go to state 140


State 138

   28 Stmt: IF LPARENT Cond RPARENT Stmt ELSE • Stmt

    RETURN     shift, and go to state 59
    PRINTF     shift, and go to state 60
    BREAK      shift, and go to state 61
    CONTINUE   shift, and go to state 62
    IF         shift, and go to state 63
    WHILE      shift, and go to state 64
    LBRACE     shift, and go to state 41
    LPARENT    shift, and go to state 23
    SEMICN     shift, and go to state 66
    NOT        shift, and go to state 24
    PLUS       shift, and go to state 25
    MINU       shift, and go to state 26
    INT_CONST  shift, and go to state 27
    IDENT      shift, and go to state 28

    Block       go to state 68
    Stmt        go to state 141
    Exp         go to state 72
    LVal        go to state 73
    PrimaryExp  go to state 31
    Number      go to state 32
    UnaryExp    go to state 33
    MulExp      go to state 34
    AddExp      go to state 35


State 139

   23 Stmt: LVal ASSIGN GETINT LPARENT RPARENT SEMICN •

    $default  reduce using rule 23 (Stmt)


State 140

   35 Stmt: PRINTF LPARENT STR_CONST COMMA Exp RPARENT SEMICN •

    $default  reduce using rule 35 (Stmt)


State 141

   28 Stmt: IF LPARENT Cond RPARENT Stmt ELSE Stmt •

    $default  reduce using rule 28 (Stmt)
